{
	"info": {
		"_postman_id": "479be8e3-ffef-4632-b0b5-4b976a548485",
		"name": "QAuto Tkachenkko",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31725391",
		"_collection_link": "https://galactic-shuttle-32174.postman.co/workspace/99fcc665-8e28-4ee7-aba6-da9197df5186/collection/31725391-479be8e3-ffef-4632-b0b5-4b976a548485?action=share&source=collection_link&creator=31725391"
	},
	"item": [
		{
			"name": "signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.nested;\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Cookie isSignedIN is present\", () => {\r",
							"  pm.expect(pm.cookies.has('isSignedIN')).to.be.false;\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"userId\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"photoFilename\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"distanceUnits\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"currency\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{myPass}}\",\r\n  \"repeatPassword\": \"{{myPass}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto.forstudy.space/api/auth/signup",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"userId\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"photoFilename\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastName\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"dateBirth\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"country\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//function getRandomDateOfBirth() {\r",
							"  //const randomYear = Math.floor(Math.random() * (2000 - 1950 + 1)) + 1950;\r",
							"  //const randomMonth = Math.floor(Math.random() * 12) + 1;\r",
							"  //const daysInMonth = new Date(randomYear, randomMonth, 0).getDate();\r",
							" /// const randomDay = Math.floor(Math.random() * daysInMonth) + 1;\r",
							" // const randomDate = new Date(randomYear, randomMonth - 1, randomDay);\r",
							"  //return randomDate.toISOString().split('T')[0]; \r",
							"//}\r",
							"//var randomDOB = getRandomDateOfBirth();\r",
							"//console.log(randomDOB)=getRandomDateOfBirth();\r",
							"//2001-11-26T15:21:05.000Z\r",
							"//var randomMileage = Math.floor(Math.random() * 99999) + 1;\r",
							"//pm.collectionVariables.set(\"UPDTmileage\", randomMileage)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"photo\": \"user-1621352948859.jpg\",\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"dateBirth\": \"{{$randomDatePast}}\",\r\n  \"country\": \"{{$randomCountry}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto.forstudy.space/api/users/profile",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"users",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "distance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 500s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Currency\", () => {\r",
							"    pm.expect(pm.response.json().data.currency).to.be.oneOf([\"usd\",\"eur\",\"uah\"]);\r",
							"})\r",
							"pm.test(\"distanceUnits\", () => {\r",
							"    pm.expect(pm.response.json().data.distanceUnits).to.be.oneOf([\"km\",\"ml\"]);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"currency\": \"usd\",\r\n  \"distanceUnits\": \"ml\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto.forstudy.space/api/users/settings",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"users",
						"settings"
					]
				}
			},
			"response": []
		},
		{
			"name": "add a car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm. response.json ();\r",
							"pm.collectionVariables.set (\"carID\", jsonData.data.id);\r",
							"pm.collectionVariables.set (\"mileage\", jsonData.data.mileage)\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 500s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"brand\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"model\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"mileage\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": 1,\r\n  \"carModelId\": 5,\r\n  \"mileage\": {{$randomInt}}\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto.forstudy.space/api/cars",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "edit a mileage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 2000s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"brand\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"model\");\r",
							"});\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"mileage\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"var randomMileage = Math.floor(Math.random() * 99999) + 1;\r",
							"pm.collectionVariables.set(\"UPDTmileage\", randomMileage)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"carBrandId\": 1,\r\n \"carModelId\": 5,\r\n \"mileage\": {{UPDTmileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto.forstudy.space/api/cars/{{carID}}",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"cars",
						"{{carID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add an expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"carId\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"reportedAt\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"liters\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"totalCost\");\r",
							"});\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"mileage\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"pm.collectionVariables.set(\"CurrentDate\", moment().format(\"YYYY-MM-DD\"));\r",
							"var randomMileage = Math.floor(Math.random() * 99999) + 1;\r",
							"pm.collectionVariables.set(\"UPDTmileage\", randomMileage)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carId\": \"{{carID}}\",\r\n  \"reportedAt\": \"{{CurrentDate}}\",\r\n  \"mileage\": {{UPDTmileage}},\r\n   \"liters\": {{$randomInt}},\r\n  \"totalCost\": {{$randomInt}},\r\n  \"forceMileage\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto.forstudy.space/api/expenses",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete an expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto.forstudy.space/api/expenses/{{EXid}}",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"expenses",
						"{{EXid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://qauto.forstudy.space/api/cars/{{carID}}",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"cars",
						"{{carID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://qauto.forstudy.space/api/users",
					"protocol": "https",
					"host": [
						"qauto",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "myPass",
			"value": "hfcvYTDTD35465",
			"type": "string"
		},
		{
			"key": "carID",
			"value": 78367
		},
		{
			"key": "EXid",
			"value": "24888"
		},
		{
			"key": "mileage",
			"value": 973
		},
		{
			"key": "CurrentDate",
			"value": "2023-12-20"
		},
		{
			"key": "UPDTmileage",
			"value": 82288
		},
		{
			"key": "DOB",
			"value": "2001-11-26T15:21:05.000Z"
		}
	]
}